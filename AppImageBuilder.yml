version: 1
script:
  # Remove any previous build
  - rm -rf AppDir | true
  - rm -rf build  | true
  # Building with meson and ninja
  - mkdir build
  - meson build --prefix=/usr/bin/
  - cd build
  - ninja
  - ninja bottles-pot
  - ninja bottles-update-po
  - cd ..
  # Preparing directories
  - mkdir -p AppDir/usr AppDir/usr/local/share/bottles AppDir/usr/bin AppDir/usr/share/glib-2.0/schemas AppDir/usr/share/applications AppDir/usr/share/metainfo AppDir/usr/share/icons
  # Compiling and installing glib-resources
  - glib-compile-resources --sourcedir=src/ui/ src/ui/bottles.gresource.xml --target=AppDir/usr/local/share/bottles/bottles.gresource
  # Copying Bottles binary
  - cp build/src/bottles AppDir/usr/bin/
  # Copying Bottles python package and remove not useful files"
  - cp -a src AppDir/usr/local/share/bottles/bottles
  - rm AppDir/usr/local/share/bottles/bottles/bottles.in
  - rm AppDir/usr/local/share/bottles/bottles/meson.build
  # Compiling and installing translations
  - cat po/LINGUAS | while read lang
  - do
  - mkdir -p AppDir/usr/share/locale/$lang/LC_MESSAGES
  - msgfmt -o AppDir/usr/share/locale/$lang/LC_MESSAGES/bottles.mo po/$lang.po
  - done
  # Copying icons
  - cp -a data/icons AppDir/usr/share
  - mv AppDir/usr/share/icons/symbolic/scalable/apps/*.svg AppDir/usr/share/icons/hicolor/scalable/apps/
  # Copying Desktop file
  - cp build/data/com.usebottles.bottles.desktop AppDir/usr/share/applications/
  # Copying and compiling gschema
  - cp data/com.usebottles.bottles.gschema.xml AppDir/usr/share/glib-2.0/schemas/com.usebottles.bottles.gschema.xml
  - glib-compile-schemas AppDir/usr/share/glib-2.0/schemas/
  # Copying appdata
  - cp -a data/com.usebottles.bottles.appdata.xml.in AppDir/usr/share/metainfo/com.usebottles.bottles.appdata.xml


AppDir:
  path: ./AppDir

  app_info:
    id: com.usebottles.bottles
    name: Bottles
    icon: com.usebottles.bottles
    version: 3.1.4
    # Set the python executable as entry point
    exec: usr/bin/python3.8
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    exec_args: "$APPDIR/usr/bin/bottles $@"

  apt:
    arch: amd64
    sources:
      - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ groovy main restricted universe multiverse'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x871920D1991BC93C'

    include:
    - dconf-gsettings-backend
    - libbz2-1.0
    - libcanberra-gtk3-module
    - libcanberra-pulse
    - libexpat1
    - libgcc-s1
    - libgpg-error0
    - libpcre3
    - libprocps8
    - libpython3.8-stdlib
    - librsvg2-common
    - libselinux1
    - python3-gi-cairo
    - gir1.2-gtk-3.0
    - gir1.2-handy-1
    - gir1.2-notify-0.7
    - libglib2.0-bin
    - ibus-gtk3
    - zlib1g
    - python3-certifi
 
    exclude: []

  before_runtime: |
     ls -a $APPDIR
     rm -f $APPDIR/.bundle.yml
     rm -rf $APPDIR/usr/share/doc
     rm -rf $APPDIR/usr/share/man
     
    
  files:
    include: []

    exclude:
      - AppDir/usr/lib/x86_64-linux-gnu/gconv
      - AppDir/usr/share/man
      - AppDir/usr/share/doc/*/README.*
      - AppDir/usr/share/doc/*/changelog.*
      - AppDir/usr/share/doc/*/NEWS.*
      - AppDir/usr/share/doc/*/TODO.*    

  runtime:
    env:
      # Set python home
      PYTHONPATH: '${APPDIR}/usr/lib/python3/dist-packages'
      # SSL CERTIFICATE_VERIFY_FAILED python3.8 -m pip install --ignore-installed --prefix=/usr --root=$APPDIR install --upgrade certifi
      #SSL_CERT_DIR: "/etc/ssl/certs:/etc/pki/ca-trust/extracted/pem:/etc/pki/ca-trust/extracted/openssl:/etc/ssl:/etc/pki/tls:/etc/pki:/etc/pki/ca-trust:/usr/local/share/certs:/usr/share/pki/ca-trust-source:/etc/openssl/certs:/var/ssl/certs"
      SSL_CERT_FILE: "$APPDIR/usr/lib/python3/dist-packages/certifi/cacert.pem"
      # if you want to use Adwaita just uncomment bellow
      # GTK_THEME: Adwaita
     
  test:
    fedora:
      image: appimagecrafters/tests-env:fedora-30
      command: ./AppRun
      use_host_x: true
    debian:
      image: appimagecrafters/tests-env:debian-stable
      command: ./AppRun
      use_host_x: true
    arch:
      image: appimagecrafters/tests-env:archlinux-latest
      command: ./AppRun
      use_host_x: true
    centos:
      image: appimagecrafters/tests-env:centos-7
      command: ./AppRun
      use_host_x: true
    ubuntu:
      image: appimagecrafters/tests-env:ubuntu-xenial
      command: ./AppRun
      use_host_x: true

AppImage:
  update-information: 'gh-releases-zsync|AppImage-*x86_64.AppImage.zsync'
  sign-key: None
  arch: x86_64
